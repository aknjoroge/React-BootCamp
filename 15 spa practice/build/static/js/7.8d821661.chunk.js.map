{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/quotes/QuoteForm.js","pages/add quote/addquote.js"],"names":["module","exports","QuoteForm","props","authorInputRef","useRef","textInputRef","useState","formTouched","setFormTouched","useApi","sendRequest","hasError","errorMessage","isLoading","isSuccess","event","a","preventDefault","enteredAuthor","current","value","enteredText","addAQuote","Card","className","when","message","to","onFocus","classes","form","onSubmit","loading","LoadingSpinner","control","htmlFor","required","type","id","ref","rows","actions","AddQuote","params"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,kJC8EtHC,EAtEG,SAACC,GACjB,IAAMC,EAAiBC,mBACjBC,EAAeD,mBAErB,EAAoCE,oBAAS,GAA7C,mBAAKC,EAAL,KAAkBC,EAAlB,KAEA,EAAoEC,cAA9DC,EAAN,EAAMA,YAAaC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,UAAWC,EAAtD,EAAsDA,UAN3B,4CAQ3B,WAAiCC,GAAjC,iBAAAC,EAAA,6DACED,EAAME,iBAEAC,EAAgBf,EAAegB,QAAQC,MACvCC,EAAchB,EAAac,QAAQC,MAJ3C,SAMQV,EAAYY,YAAUJ,EAAeG,IAN7C,4CAR2B,sBAoB3B,OAAIV,EAEA,cAAC,WAAD,UACE,cAACY,EAAA,EAAD,UACE,sBAAKC,UAAU,iBAAf,UACE,uCACA,6BAAKZ,WAQb,eAAC,WAAD,WACE,cAAC,IAAD,CACEa,KAAMlB,IAAgBO,EACtBY,QAAQ,wDAETZ,GAAa,cAAC,IAAD,CAAUa,GAAG,MAE3B,cAACJ,EAAA,EAAD,UACE,uBACEK,QA1BR,WACEpB,GAAe,IA0BTgB,UAAWK,IAAQC,KACnBC,SA7CmB,4CA0CrB,UAKGlB,GACC,qBAAKW,UAAWK,IAAQG,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAKT,UAAWK,IAAQK,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,UAAQ,EAACC,KAAK,OAAOC,GAAG,SAASC,IAAKpC,OAE/C,sBAAKqB,UAAWK,IAAQK,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUC,UAAQ,EAACE,GAAG,OAAOE,KAAK,IAAID,IAAKlC,OAE7C,qBAAKmB,UAAWK,IAAQY,QAAxB,SACE,wBAAQjB,UAAU,MAAlB,kCC1DGkB,UAVf,SAAkBC,GAChB,OACE,cAAC,WAAD,UACE,sBAAKnB,UAAU,WAAf,UACE,oBAAIA,UAAU,QAAd,yBACA,cAAC,EAAD","file":"static/js/7.8d821661.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__N93WO\",\"loading\":\"QuoteForm_loading__1JITF\",\"control\":\"QuoteForm_control__1GMBc\",\"actions\":\"QuoteForm_actions__LskO1\"};","import { Fragment, useRef, useState } from \"react\";\nimport { Prompt, Redirect } from \"react-router\";\nimport useApi from \"../../hooks/useApi\";\nimport { addAQuote } from \"../library/appFunctions\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  let [formTouched, setFormTouched] = useState(false);\n\n  let { sendRequest, hasError, errorMessage, isLoading, isSuccess } = useApi();\n\n  async function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    await sendRequest(addAQuote(enteredAuthor, enteredText));\n  }\n\n  function focusHandler() {\n    setFormTouched(true);\n  }\n  if (hasError) {\n    return (\n      <Fragment>\n        <Card>\n          <div className=\"centered error\">\n            <h1>Error</h1>\n            <h2>{errorMessage}</h2>\n          </div>\n        </Card>\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      <Prompt\n        when={formTouched && !isSuccess}\n        message=\"Quote not submitted! Are you sure you want to leave\"\n      />\n      {isSuccess && <Redirect to=\"/\" />}\n\n      <Card>\n        <form\n          onFocus={focusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input required type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea required id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\">Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { Fragment } from \"react\";\r\nimport QuoteForm from \"../../components/quotes/QuoteForm\";\r\n\r\nfunction AddQuote(params) {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"centered\">\r\n        <h2 className=\"block\">Add a Quote</h2>\r\n        <QuoteForm></QuoteForm>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\nexport default AddQuote;\r\n"],"sourceRoot":""}