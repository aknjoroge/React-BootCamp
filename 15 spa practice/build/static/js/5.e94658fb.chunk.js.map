{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/all quotes/quotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","textLeft","author","to","id","QuoteList","list","quotes","map","quote","Quotes","queryID","useState","isEmpty","setIsEmpty","setquotes","apiData","setapiData","useApi","sendRequest","hasError","errorMessage","isLoading","isSuccess","sortArc","setSortArc","location","useLocation","history","useHistory","useEffect","a","fetchQuotes","key","data","responce","push","prevdata","URLSearchParams","search","get","sortedQuotes","ascending","sort","quoteA","quoteB","length","sortQuotes","Card","dataready","onClick","event","preventDefault","LoadingSpinner"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,SAAW,8B,mBCA5DD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,iICkB5CC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,4BAAYH,UAAWC,IAAQG,SAA/B,SAA0CL,EAAMM,YAElD,cAAC,IAAD,CAAML,UAAU,MAAMM,GAAE,kBAAaP,EAAMQ,IAA3C,iC,iBCUSC,EAjBG,SAACT,GACjB,OACE,cAAC,WAAD,UACE,oBAAIC,UAAWC,IAAQQ,KAAvB,SACGV,EAAMW,OAAOC,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEL,GAAIK,EAAML,GACVF,OAAQO,EAAMP,OACdF,KAAMS,EAAMT,MAHPS,EAAML,Y,wBCyFRM,UA5Ff,WACE,IAWIC,EAXJ,EAA4BC,oBAAS,GAArC,mBAAKC,EAAL,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAKL,EAAL,KAAaQ,EAAb,KACA,EAA4BH,mBAAS,IAArC,mBAAKI,EAAL,KAAcC,EAAd,KAEA,EAAoEC,cAA9DC,EAAN,EAAMA,YAAaC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,UAE3C,GAFA,EAAsDC,UAE1BX,oBAAS,IAArC,mBAAKY,EAAL,KAAcC,EAAd,KAEIC,EAAWC,cAEXC,EAAUC,cA8Cd,GAjCAC,oBAAS,sBAAC,gCAAAC,EAAA,sEACSZ,EAAYa,eADrB,OAGR,IAAWC,KAFPC,EADI,OAEJC,EAAW,GACGD,EAChBC,EAASC,KAAK,CACZlC,OAAQgC,EAAKD,GAAK/B,OAClBE,GAAI8B,EAAKD,GAAK7B,GACdJ,KAAMkC,EAAKD,GAAKjC,OAIpBiB,GAAW,SAAUoB,GACnB,OAAOF,KAZD,2CAcP,IAEHL,qBACE,WACEnB,EAAU,IAAI2B,gBAAgBZ,EAASa,QAAQC,IAAI,QACnD,IAAIC,EA7BW,SAAClC,EAAQmC,GAC1B,OAAOnC,EAAOoC,MAAK,SAACC,EAAQC,GAC1B,OAAIH,EACKE,EAAO5C,KAAK8C,OAASD,EAAO7C,KAAK8C,OAAS,GAAK,EAE/CF,EAAO5C,KAAK8C,OAASD,EAAO7C,KAAK8C,OAAS,GAAK,KAwBrCC,CAAW/B,EAASQ,GACvCV,GAAY2B,EAAaK,OAAS,GAElCrB,GAAW,WACT,MAAkB,OAAXd,KAETI,GAAU,SAAUsB,GAClB,OAAOI,OAIX,CAACf,EAASa,OAAQvB,IAGhBI,EACF,OACE,cAAC,WAAD,UACE,cAAC4B,EAAA,EAAD,UACE,sBAAKnD,UAAU,iBAAf,UACE,uCACA,6BAAKwB,WAOf,IAAI4B,GAAa3B,IAAcT,EAO/B,OACE,cAAC,WAAD,UACE,sBAAKhB,UAAU,WAAf,UACE,qBAAKA,UAAU,eAAf,SACE,yBAAQqD,QAThB,SAAqBC,GACnBA,EAAMC,iBACNxB,EAAQQ,KAAR,gBAAsBZ,EAAU,MAAQ,SAOJ3B,UAAU,YAAxC,4BACkB2B,EAAU,YAAc,kBAI3CF,GAAa,cAAC+B,EAAA,EAAD,IACbJ,GAAa,cAAC,EAAD,CAAW1C,OAAQA","file":"static/js/5.e94658fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__FRwe5\",\"textLeft\":\"QuoteItem_textLeft__ofxKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3IM_K\",\"sorting\":\"QuoteList_sorting__1gPun\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption className={classes.textLeft}>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst QuoteList = (props) => {\n  return (\n    <Fragment>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\r\nimport { fetchQuotes } from \"../../components/library/appFunctions\";\r\nimport QuoteList from \"../../components/quotes/QuoteList\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport LoadingSpinner from \"../../components/UI/LoadingSpinner\";\r\nimport useApi from \"../../hooks/useApi\";\r\n\r\nfunction Quotes() {\r\n  let [isEmpty, setIsEmpty] = useState(true);\r\n  let [quotes, setquotes] = useState([]);\r\n  let [apiData, setapiData] = useState([]);\r\n\r\n  let { sendRequest, hasError, errorMessage, isLoading, isSuccess } = useApi();\r\n\r\n  let [sortArc, setSortArc] = useState(true);\r\n\r\n  let location = useLocation();\r\n\r\n  let history = useHistory();\r\n  let queryID;\r\n\r\n  const sortQuotes = (quotes, ascending) => {\r\n    return quotes.sort((quoteA, quoteB) => {\r\n      if (ascending) {\r\n        return quoteA.text.length > quoteB.text.length ? 1 : -1;\r\n      } else {\r\n        return quoteA.text.length < quoteB.text.length ? 1 : -1;\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(async function () {\r\n    let data = await sendRequest(fetchQuotes());\r\n    let responce = [];\r\n    for (const key in data) {\r\n      responce.push({\r\n        author: data[key].author,\r\n        id: data[key].id,\r\n        text: data[key].text,\r\n      });\r\n    }\r\n\r\n    setapiData(function (prevdata) {\r\n      return responce;\r\n    });\r\n  }, []);\r\n\r\n  useEffect(\r\n    function () {\r\n      queryID = new URLSearchParams(location.search).get(\"sort\");\r\n      let sortedQuotes = sortQuotes(apiData, sortArc);\r\n      setIsEmpty(!sortedQuotes.length > 0);\r\n\r\n      setSortArc(function () {\r\n        return queryID == \"arc\" ? false : true;\r\n      });\r\n      setquotes(function (prevdata) {\r\n        return sortedQuotes;\r\n      });\r\n    },\r\n\r\n    [location.search, apiData]\r\n  );\r\n\r\n  if (hasError) {\r\n    return (\r\n      <Fragment>\r\n        <Card>\r\n          <div className=\"centered error\">\r\n            <h1>Error</h1>\r\n            <h2>{errorMessage}</h2>\r\n          </div>\r\n        </Card>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  let dataready = !isLoading && !isEmpty;\r\n\r\n  function sortHandler(event) {\r\n    event.preventDefault();\r\n    history.push(`?sort=${sortArc ? \"arc\" : \"dsc\"}`);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"centered\">\r\n        <div className=\"center-right\">\r\n          <button onClick={sortHandler} className=\"btn-basic\">\r\n            Sort By length {sortArc ? \"assending\" : \"descending\"}\r\n          </button>\r\n        </div>\r\n\r\n        {isLoading && <LoadingSpinner />}\r\n        {dataready && <QuoteList quotes={quotes} />}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\nexport default Quotes;\r\n"],"sourceRoot":""}